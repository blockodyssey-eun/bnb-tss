syntax = "proto3";

package tss;

option go_package = "tss_project/proto";

import "google/protobuf/any.proto";

// TSS 서비스 정의
service TSSService {
  // Gateway -> Party: 키 생성 요청
  rpc InitiateKeygen(KeygenRequest) returns (KeygenResponse) {}
  
  // Party <-> Party: 메시지 교환
  rpc ExchangeMessage(MessageWrapper) returns (MessageResponse) {}
}

// 키 생성 요청
message KeygenRequest {
  int32 threshold = 1;
  int32 total_parties = 2;
  string party_id = 3;
  repeated PartyID parties = 4;
}

// 키 생성 응답
message KeygenResponse {
  bool success = 1;
  string public_key = 2;
  string error_message = 3;
}

// Party ID
message PartyID {
  string id = 1;
  string moniker = 2;
  bytes key = 3;
}

// 메시지 래퍼
message MessageWrapper {
  PartyID from = 1;
  repeated PartyID to = 2;
  bool is_broadcast = 3;
  string session_id = 4;
  google.protobuf.Any content = 5;
}

// 메시지 응답
message MessageResponse {
  bool success = 1;
}

// 키 생성 라운드 메시지들
message KGRound1Message {
  bytes commitment = 1;
  bytes paillier_n = 2;
  bytes n_tilde = 3;
  bytes h1 = 4;
  bytes h2 = 5;
  repeated bytes dlnproof_1 = 6;
  repeated bytes dlnproof_2 = 7;
}

message KGRound2Message1 {
  bytes share = 1;
  repeated bytes fac_proof = 2;
}

message KGRound2Message2 {
  repeated bytes de_commitment = 1;
  repeated bytes mod_proof = 2;
}

message KGRound3Message {
  repeated bytes paillier_proof = 1;
}
